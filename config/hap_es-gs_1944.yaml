common:
  img_topic: "/usb_cam/image_raw"
  lid_topic: "/livox/lidar"
  imu_topic: "/livox/imu"
  img_en: 1 
  lidar_en: 1
  ros_driver_bug_fix: false     # default = false
  #point_filter_num: 15          # this doesn't exist yet. I want to implement tho.

extrin_calib:
  extrinsic_T: [ -0.0137, -0.0421, -0.0332 ]  # coordinate system X=-13.7mm, Y=-42.1 Z=-33.2   
  extrinsic_R: [ 1, 0, 0, 0, 1, 0, 0, 0, 1]
  Rcl: [0.0017453283658983088,-0.9999984769132877,0.0,0.010471768166810553,1.8276701859647138e-05,-0.9999451693655121,0.9999436463623117,0.001745232668436617,0.010471784116245794]
  Pcl: [0.0,0.075,-0.0075]

time_offset: 
  imu_time_offset: 0.001          # 0.001 chosen randomly
  img_time_offset: -0.065         #-0.065 | -0.2        # default = 0.1 | good = -0.16
  exposure_time_init: 0.00       # default = 0.0

preprocess:
  point_filter_num: 1       # default = 1           || set to 1 for final output and be patient
  filter_size_surf: 0.08   # default = 0.1 | good = 0.1
  lidar_type: 1 # Livox Avia LiDAR
  scan_line: 6
  blind: 2       # default = 0.80 | good 1.2m

vio:
  # Green Points: Successfully tracked inliers.
  # Blue Points: Tracked outliers with higher errors.
  max_iterations: 5                   # default = 5            || increase when creating final output
  outlier_threshold: 60               # 78 100 156 #100 200 500 700 infinite
  img_point_cov: 60                   # default = 100 # Seems to be a tolerance for blue/green points on image
  patch_size: 8                      # default = 8 | good = 8 or 16
  patch_pyrimid_level: 4              # default = 4 | good = 4   or 
  normal_en: true                     # default = true
  raycast_en: true                    # default = false
  inverse_composition_en: false       # default = false | no idea if this helps or hinders
  exposure_estimate_en: true          # default = true | good = false
  inv_expo_cov: 0.01                  # default = 0.1

imu:
  imu_en: true #true
  imu_int_frame: 30 #30
  acc_cov: 2          # default = 0.5 good=0.2
  gyr_cov: 0.1          # default = 0.3 good=0.2
  b_acc_cov: 0.0001 #0.0001 #  good = 0.001?  
  b_gyr_cov: 0.0001 #0.0001 #  good = 0.001?

lio:
  max_iterations: 5           # default = 5          || increase when creating final output
  dept_err: 0.02               # default = 0.02     | good = 0.002 | better = 0.002
  beam_err: 0.05              # default = 0.05     | good = 0.005 | better = 0.003
  min_eigen_value: 0.005      # 0.005     #default = 0.0025 good=0.002
  voxel_size: 0.25             # default = 0.5   | good = 0.025  ###MOST CRITICAL VALUE IMO###
  max_layer: 2                # deafult = 2    | good = 2
  max_points_num: 50   # default = 50  500     | More is better but much slower.
  layer_init_num: [5, 5, 5, 5, 5]         # default = [5, 5, 5, 5, 5]

local_map:  
  map_sliding_en: false # default = false
  half_map_size: 100    # default = 100
  sliding_thresh: 8     # default = 8

uav:
  imu_rate_odom: false
  gravity_align_en: false

publish:
  dense_map_en: true
  pub_effect_point_en: true 
  pub_plane_en: false
  pub_scan_num: 1
  blind_rgb_points: 2       # default = 0.0 # good might need to match the lidar blind or more? 
  pub_pt_minimum_views: 5  # Publish points which have been rendered up to "pub_pt_minimum_views" times. [default = 3]

evo:
  seq_name: "RSS"
  pose_output_en: false

pcd_save:
  pcd_save_en: true
  colmap_output_en: false # need to set interval = -1
  filter_size_pcd: 0.15
  interval: -1
  # how many LiDAR frames saved in each pcd file;
  # -1 : all frames will be saved in ONE pcd file, may lead to memory crash when having too much frames.
